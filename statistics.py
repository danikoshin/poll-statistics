# -*- coding: utf-8 -*-
"""statistics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z4suRqRtYZCIbYk9lsCUjeaSrNIdRBZh
"""

# app.py

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import re

# --- 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ ---
st.set_page_config(layout="wide", page_title="–ê–Ω–∞–ª–∏–∑ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π")
st.title("üìä –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥: –ê–Ω–∞–ª–∏–∑ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –º–æ–ª–æ–¥–µ–∂–∏")
st.markdown("–≠—Ç–æ—Ç –¥–∞—à–±–æ—Ä–¥ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∞–Ω–∞–ª–∏–∑ –æ–ø—Ä–æ—Å–∞ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –º–æ–ª–æ–¥–µ–∂–∏ –≤ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π —Å—Ñ–µ—Ä–µ. **–ö–ª—é—á–µ–≤—ã–µ –≤—ã–≤–æ–¥—ã —Ä–∞–∑–º–µ—â–µ–Ω—ã –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–æ–¥ –∫–∞–∂–¥—ã–º –≥—Ä–∞—Ñ–∏–∫–æ–º.**")

# --- 2. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö ---
@st.cache_data
def load_and_process_data(file_path):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç, –æ—á–∏—â–∞–µ—Ç –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.
    """
    df = pd.read_csv(file_path)
    df.dropna(thresh=5, inplace=True)
    df.columns = [
        'timestamp', 'age', 'gender', 'occupation', 'income_source', 'income', 'hobbies',
        'social_media', 'screen_time', 'influencers', 'has_card', 'banks_used', 'main_bank',
        'reason_main_bank', 'opened_new_card', 'reason_new_bank', 'use_new_card',
        'rating_app', 'rating_office', 'rating_reliability', 'rating_products',
        'rating_service_fee', 'rating_cashback', 'rating_brand', 'pain_points', 'interview'
    ]

    def clean_bank_name(name):
        if pd.isna(name): return None
        name = str(name).strip().lower()
        if '—Å–±–µ—Ä' in name: return '–°–ë–ï–†'
        if '—Ç-–±–∞–Ω–∫' in name or '—Ç–∏–Ω—å–∫–æ—Ñ—Ñ' in name: return '–¢-–ë–∞–Ω–∫'
        if '–∞–ª—å—Ñ–∞' in name: return '–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫'
        if '–≤—Ç–±' in name: return '–í–¢–ë'
        if '—è–Ω–¥–µ–∫—Å' in name: return '–Ø–Ω–¥–µ–∫—Å –ë–∞–Ω–∫'
        if '–≥–∞–∑–ø—Ä–æ–º' in name: return '–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫'
        if '–æ–∑–æ–Ω' in name or 'ozon' in name: return 'Ozon –ë–∞–Ω–∫'
        return name.capitalize()

    df['main_bank'] = df['main_bank'].apply(clean_bank_name)
    df['banks_used'] = df['banks_used'].apply(lambda x: ', '.join(map(clean_bank_name, str(x).split(','))) if pd.notna(x) else x)

    age_order = ['–¥–æ 14 –ª–µ—Ç', '14-15 –ª–µ—Ç', '16-17 –ª–µ—Ç', '17-18 –ª–µ—Ç', '19-20 –ª–µ—Ç', '21-22 –≥–æ–¥–∞', '–±–æ–ª–µ–µ 22 –ª–µ—Ç']
    income_order = ['1-5–∫', '5-10–∫', '10-20–∫', '20-50–∫', '50-80–∫', '80-120–∫', '120–∫+']
    df['age'] = pd.Categorical(df['age'], categories=age_order, ordered=True)
    df['income'] = pd.Categorical(df['income'], categories=income_order, ordered=True)

    def categorize_reasons(text):
        if pd.isna(text): return []
        text = text.lower()
        categories = []
        if re.search(r'–∫—ç—à–±–µ–∫|–±–æ–Ω—É—Å|–∞–∫—Ü–∏–∏|–ª–æ—è–ª—å–Ω–æ—Å—Ç', text): categories.append('–ö—ç—à–±—ç–∫ –∏ –±–æ–Ω—É—Å—ã')
        if re.search(r'–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å|–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ|—É–¥–æ–±–Ω', text): categories.append('–£–¥–æ–±—Å—Ç–≤–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è/–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞')
        if re.search(r'–ø—Ä–∏–≤—ã–∫|–¥–∞–≤–Ω–æ', text): categories.append('–ü—Ä–∏–≤—ã—á–∫–∞/–ò–Ω–µ—Ä—Ü–∏—è')
        if re.search(r'–¥—Ä—É–∑—å—è|—Å–µ–º—å—è|–≤—Å–µ –ø–æ–ª—å–∑—É—é—Ç—Å—è', text): categories.append('–°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ')
        if re.search(r'–∑–∞—Ä–ø–ª–∞—Ç|—Å—Ç–∏–ø–µ–Ω–¥–∏–∞–ª—å–Ω–∞—è|–æ–±—è–∑–∞–ª–∏|—Ä–∞–±–æ—Ç–∞|—É—á–µ–±', text): categories.append('–ó–∞—Ä–ø–ª–∞—Ç–Ω—ã–π/–°—Ç–∏–ø–µ–Ω–¥–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç')
        if re.search(r'—ç–∫–æ—Å–∏—Å—Ç–µ–º', text): categories.append('–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –±–∞–Ω–∫–∞')
        if re.search(r'—Ç–∞—Ä–∏—Ñ|–æ–±—Å–ª—É–∂–∏–≤–∞–Ω', text): categories.append('–í—ã–≥–æ–¥–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã/–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ')
        if re.search(r'–∫—Ä–µ–¥–∏—Ç|–≤–∫–ª–∞–¥', text): categories.append('–í—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã (–∫—Ä–µ–¥–∏—Ç—ã/–≤–∫–ª–∞–¥—ã)')
        if re.search(r'—ç—Å—Ç–µ—Ç–∏–∫–∞|–¥–∏–∑–∞–π–Ω|–≥–µ—Ä–±|–Ω—Ä–∞–≤–∏—Ç—Å—è', text): categories.append('–≠—Å—Ç–µ—Ç–∏–∫–∞ –∏ –±—Ä–µ–Ω–¥')
        if not categories: categories.append('–î—Ä—É–≥–æ–µ')
        return list(set(categories))

    def categorize_pains(text):
        if pd.isna(text): return []
        text = text.lower()
        categories = []
        if re.search(r'–ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω|–Ω–µ—É–¥–æ–±–Ω|—Å–ª–æ–∂–Ω', text): categories.append('–ü–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å/–°–ª–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è')
        if re.search(r'–≥–ª—é–∫–∏|–º–µ–¥–ª–µ–Ω–Ω|—Ç–æ—Ä–º–æ–∑–∏—Ç|–ª–∞–≥–∞–µ—Ç', text): categories.append('–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã (–≥–ª—é–∫–∏, –º–µ–¥–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞)')
        if re.search(r'—Ä–µ–∫–ª–∞–º–∞|—É–≤–µ–¥–æ–º–ª–µ–Ω|–Ω–∞–≤—è–∑—á–∏–≤', text): categories.append('–ù–∞–≤—è–∑—á–∏–≤–∞—è —Ä–µ–∫–ª–∞–º–∞/—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
        if re.search(r'–ø–æ–¥–¥–µ—Ä–∂–∫|—Ä–æ–±–æ—Ç|–¥–æ–ª–≥–æ–µ –æ–∂–∏–¥–∞–Ω', text): categories.append('–ü–ª–æ—Ö–∞—è —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏')
        if re.search(r'—Ñ–∏—à–µ–∫|—Å–∫—É–∫–∞|—Å–∫—É—á–Ω–æ', text): categories.append('–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ñ–∏—à–µ–∫/–°–∫—É–∫–∞')
        if re.search(r'—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞|—Ç—Ä–∞—Ç–∞–º', text): categories.append('–ü–ª–æ—Ö–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞/–∞–Ω–∞–ª–∏—Ç–∏–∫–∞')
        if re.search(r'–Ω–∏—á–µ–≥–æ –Ω–µ —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç', text): categories.append('–ù–∏—á–µ–≥–æ –Ω–µ —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç')
        if not categories: categories.append('–î—Ä—É–≥–æ–µ')
        return list(set(categories))

    df['reason_categories'] = df['reason_main_bank'].apply(categorize_reasons)
    df['pain_categories'] = df['pain_points'].apply(categorize_pains)

    return df

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ---
try:
    df = load_and_process_data('google_poll.csv')
except FileNotFoundError:
    st.error("–§–∞–π–ª 'google_poll.csv' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ, —á—Ç–æ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
    st.stop()


# --- 3. –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ ---
st.sidebar.title("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
page = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:",
                        ['–ü–æ—Ä—Ç—Ä–µ—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏', '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è', '–£–≥–ª—É–±–ª–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã', '–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'])


# --- 4. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤ ---
def plot_percentage_bar(data, column, title, xlabel, ylabel, horizontal=False, palette='viridis'):
    fig, ax = plt.subplots(figsize=(12, 7))
    percentages = data[column].dropna().value_counts(normalize=True) * 100

    if horizontal:
        sns.barplot(ax=ax, x=percentages.values, y=percentages.index, palette=palette, order=percentages.index)
        ax.set_xlabel(xlabel, fontsize=12)
        ax.set_ylabel(ylabel, fontsize=12)
        for i, v in enumerate(percentages.values):
            ax.text(v + 0.5, i, f'{v:.1f}%', color='black', va='center')
    else:
        sns.barplot(ax=ax, x=percentages.index, y=percentages.values, palette=palette, order=percentages.index)
        ax.set_xlabel(xlabel, fontsize=12)
        ax.set_ylabel(ylabel, fontsize=12)
        ax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha='right')
        for p in ax.patches:
            ax.annotate(f'{p.get_height():.1f}%', (p.get_x() + p.get_width() / 2., p.get_height()),
                        ha='center', va='center', xytext=(0, 9), textcoords='offset points')

    ax.set_title(title, fontsize=18)
    if not horizontal:
        ax.set_ylim(0, max(percentages.values) * 1.15)

    plt.tight_layout()
    return fig


# --- 5. –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---

if page == '–ü–æ—Ä—Ç—Ä–µ—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏':
    st.header("üë§ –°–æ—Ü–∏–∞–ª—å–Ω–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏")
    st.pyplot(plot_percentage_bar(df, 'occupation', '–û—Å–Ω–æ–≤–Ω–æ–π —Ä–æ–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', '–î–æ–ª—è, %', '', horizontal=True))
    st.info("""
    **–í—ã–≤–æ–¥:** –Ø–¥—Ä–æ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ ‚Äî **—Å—Ç—É–¥–µ–Ω—Ç—ã, —á–∞—Å—Ç–æ —Å–æ–≤–º–µ—â–∞—é—â–∏–µ —É—á–µ–±—É —Å —Ä–∞–±–æ—Ç–æ–π (–±–æ–ª–µ–µ 70%)**. –≠—Ç–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –Ω–∞—á–∏–Ω–∞—é—Ç —Å–≤–æ–π –∫–∞—Ä—å–µ—Ä–Ω—ã–π –ø—É—Ç—å, –Ω–æ –µ—â–µ –Ω–µ –∏–º–µ—é—Ç –ø–æ–ª–Ω–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.
    """)

    st.pyplot(plot_percentage_bar(df, 'income', '–°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä –¥–æ—Ö–æ–¥–∞', '–î–æ–ª—è, %', '–î–æ—Ö–æ–¥ (–≤ —Ä—É–±–ª—è—Ö)', horizontal=True))
    st.info("""
    **–í—ã–≤–æ–¥:** –°–∞–º–∞—è –∫—Ä—É–ø–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–∞—è –≥—Ä—É–ø–ø–∞ ‚Äî **20-50 —Ç—ã—Å. —Ä—É–±–ª–µ–π (34%)**, –Ω–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è —á–∞—Å—Ç—å (**40%**) –∏–º–µ–µ—Ç –¥–æ—Ö–æ–¥ **–Ω–∏–∂–µ 20 —Ç—ã—Å. —Ä—É–±–ª–µ–π**. –≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ –∞—É–¥–∏—Ç–æ—Ä–∏—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏ –≤—ã–≥–æ–¥–Ω—ã–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º.
    """)

elif page == '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è':
    st.header("üè¶ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ –∏—Ö –ø—Ä–∏—á–∏–Ω—ã")

    col1, col2 = st.columns(2)
    with col1:
        st.subheader("–î–æ–ª—è –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –±–∞–Ω–∫—É")
        st.pyplot(plot_percentage_bar(df, 'main_bank', '', '–î–æ–ª—è, %', '', horizontal=True, palette='crest'))
    with col2:
        st.subheader("–û–±—â–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –±–∞–Ω–∫–æ–≤")
        banks_exploded = df.dropna(subset=['banks_used']).copy()
        banks_exploded['banks_used'] = banks_exploded['banks_used'].str.split(', ')
        banks_exploded = banks_exploded.explode('banks_used')
        st.pyplot(plot_percentage_bar(banks_exploded, 'banks_used', '', '–î–æ–ª—è, %', '', horizontal=True, palette='flare'))

    st.info("""
    **–í—ã–≤–æ–¥:** **–°–ë–ï–† (42%)** –∏ **–¢-–ë–∞–Ω–∫ (35%)** ‚Äî –¥–≤–∞ –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏—Ö –∏–≥—Ä–æ–∫–∞. –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –æ–±—â—É—é –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å (–∫–∞–∫–∏–º–∏ –±–∞–Ω–∫–∞–º–∏ –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ –ø–æ–ª—å–∑—É—é—Ç—Å—è), –∏—Ö –¥–æ–ª–∏ –ø–æ—á—Ç–∏ —Ä–∞–≤–Ω—ã. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ **–¢-–ë–∞–Ω–∫ –∏ –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫ —á–∞—Å—Ç–æ —è–≤–ª—è—é—Ç—Å—è –≤—Ç–æ—Ä—ã–º–∏, –Ω–æ –≤–∞–∂–Ω—ã–º–∏ –∫–∞—Ä—Ç–∞–º–∏**.
    """)

    st.subheader("–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã: –∑–∞ —á—Ç–æ –≤—ã–±–∏—Ä–∞—é—Ç —Å–≤–æ–π –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–Ω–∫?")
    top_banks = ['–°–ë–ï–†', '–¢-–ë–∞–Ω–∫', '–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫', '–í–¢–ë']
    df_top_banks = df[df['main_bank'].isin(top_banks)]
    reasons_exploded = df_top_banks.explode('reason_categories')
    crosstab_reasons = pd.crosstab(reasons_exploded['main_bank'], reasons_exploded['reason_categories'], normalize='index').reindex(top_banks) * 100
    fig, ax = plt.subplots(figsize=(16, 8))
    sns.heatmap(crosstab_reasons, annot=True, fmt='.1f', cmap='Greens', linewidths=.5, ax=ax)
    ax.set_title('–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã: % —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –ö–ê–¢–ï–ì–û–†–ò–ô –ø—Ä–∏—á–∏–Ω –≤—ã–±–æ—Ä–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–∞–Ω–∫–∞', fontsize=16)
    ax.set_xlabel('–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–∏—á–∏–Ω—ã'); ax.set_ylabel('–û—Å–Ω–æ–≤–Ω–æ–π –±–∞–Ω–∫'); ax.tick_params(axis='x', rotation=45)
    st.pyplot(fig)
    st.info("""
    **–í—ã–≤–æ–¥—ã:**
    - **–°–ë–ï–†:** –í—ã–±–∏—Ä–∞—é—Ç –ø–æ **–∏–Ω–µ—Ä—Ü–∏–∏ –∏ –ø—Ä–∏–≤—ã—á–∫–µ (31%)** –∏ –∏–∑-–∑–∞ **–∑–∞—Ä–ø–ª–∞—Ç–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ (20%)**.
    - **–¢-–ë–∞–Ω–∫:** –Ø–≤–Ω—ã–π –ª–∏–¥–µ—Ä –ø–æ **–∫—ç—à–±—ç–∫—É (30%)** –∏ **—É–¥–æ–±—Å—Ç–≤—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (28%)**. –≠—Ç–æ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–π –≤—ã–±–æ—Ä –∑–∞ –≤—ã–≥–æ–¥—É –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.
    - **–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫:** –ì–ª–∞–≤–Ω—ã–π –∫–æ–∑—ã—Ä—å ‚Äî **–∫—ç—à–±—ç–∫ –∏ –±–æ–Ω—É—Å—ã (33%)**. –≠—Ç–æ –µ–≥–æ –∫–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ –±–∏—Ç–≤—ã –∑–∞ –∫–ª–∏–µ–Ω—Ç–∞ —Å –¢-–ë–∞–Ω–∫–æ–º.
    - **–í–¢–ë:** –í –æ—Å–Ω–æ–≤–Ω–æ–º —è–≤–ª—è–µ—Ç—Å—è **–∑–∞—Ä–ø–ª–∞—Ç–Ω—ã–º –±–∞–Ω–∫–æ–º (33%)**, –∫–∞–∫ –∏ –°–±–µ—Ä.
    """)

    st.subheader("–°–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã: —á—Ç–æ —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö –±–∞–Ω–∫–æ–≤?")
    pains_exploded = df_top_banks.explode('pain_categories')
    pains_exploded = pains_exploded[pains_exploded['pain_categories'] != '–ù–∏—á–µ–≥–æ –Ω–µ —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç']
    crosstab_pains = pd.crosstab(pains_exploded['main_bank'], pains_exploded['pain_categories'], normalize='index').reindex(top_banks) * 100
    fig, ax = plt.subplots(figsize=(16, 7))
    sns.heatmap(crosstab_pains, annot=True, fmt='.1f', cmap='Reds', linewidths=.5, ax=ax)
    ax.set_title('–°–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã: % —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –ö–ê–¢–ï–ì–û–†–ò–ô "—Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª–µ–π" –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–∞–Ω–∫–∞', fontsize=16)
    ax.set_xlabel('–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–æ–±–ª–µ–º—ã'); ax.set_ylabel('–û—Å–Ω–æ–≤–Ω–æ–π –±–∞–Ω–∫'); ax.tick_params(axis='x', rotation=45)
    st.pyplot(fig)
    st.info("""
    **–í—ã–≤–æ–¥—ã:**
    - **–°–ë–ï–†:** –ß–∞—â–µ –≤—Å–µ–≥–æ –∂–∞–ª—É—é—Ç—Å—è –Ω–∞ **–Ω–∞–≤—è–∑—á–∏–≤—É—é —Ä–µ–∫–ª–∞–º—É (28%)** –∏ **–ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (26%)**.
    - **–¢-–ë–∞–Ω–∫:** –ì–ª–∞–≤–Ω–∞—è –±–æ–ª—å ‚Äî **–ø–ª–æ—Ö–∞—è —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (22%)** –∏ **—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã (21%)**.
    - **–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫:** –ö–∞–∫ –∏ —É –¢-–ë–∞–Ω–∫–∞, —Å–∞–º–∞—è –±–æ–ª—å—à–∞—è –ø—Ä–æ–±–ª–µ–º–∞ ‚Äî **–ø–ª–æ—Ö–∞—è —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (29%)**.
    - **–í–¢–ë:** –õ–∏–¥–µ—Ä –ø–æ –∂–∞–ª–æ–±–∞–º –Ω–∞ **—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –≥–ª—é–∫–∏ (28%)**.
    """)

elif page == '–£–≥–ª—É–±–ª–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã':
    st.header("üîé –£–≥–ª—É–±–ª–µ–Ω–Ω—ã–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã")

    st.subheader("–ù–∞—Å–∫–æ–ª—å–∫–æ '–ª–∏–ø–∫–∏–µ' –∫–ª–∏–µ–Ω—Ç—ã, –ø—Ä–∏—à–µ–¥—à–∏–µ –∑–∞ –∫—ç—à–±—ç–∫–æ–º?")
    cashback_users = df[df['reason_new_bank'].str.contains('–∫—ç—à–±–µ–∫|–±–æ–Ω—É—Å—ã', na=False, case=False)]
    usage_stats = cashback_users['use_new_card'].value_counts(normalize=True) * 100
    fig, ax = plt.subplots(figsize=(8, 5))
    if not usage_stats.empty:
        ax.pie(usage_stats, labels=usage_stats.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette('summer'), textprops={'fontsize': 12})
        ax.set_title('–ö–∞–∫ –ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–∞—Ä—Ç–æ–π, –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–æ–π —Ä–∞–¥–∏ –∫—ç—à–±—ç–∫–∞/–±–æ–Ω—É—Å–æ–≤?', fontsize=16)
        st.pyplot(fig)
    else:
        st.write("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
    st.info("""
    **–í—ã–≤–æ–¥:** –ö—ç—à–±—ç–∫ ‚Äî —ç—Ç–æ **–Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è**. **83%** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ—Ñ–æ—Ä–º–∏–≤—à–∏—Ö –∫–∞—Ä—Ç—É —Ä–∞–¥–∏ –±–æ–Ω—É—Å–æ–≤, –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç –µ–π –∞–∫—Ç–∏–≤–Ω–æ –∏–ª–∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è. –≠—Ç–æ –Ω–µ "–æ–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è" –∞–∫—Ü–∏—è, –∞ –∫–ª—é—á–µ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞.
    """)

    st.subheader("–ß—Ç–æ —Ü–µ–Ω—è—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã—Ö –≥—Ä—É–ø–ø–∞—Ö?")
    df['age_segment'] = df['age'].apply(lambda x: '–î–æ 18 –ª–µ—Ç' if x in ['–¥–æ 14 –ª–µ—Ç', '14-15 –ª–µ—Ç', '16-17 –ª–µ—Ç', '17-18 –ª–µ—Ç'] else ('19-22 –≥–æ–¥–∞' if x in ['19-20 –ª–µ—Ç', '21-22 –≥–æ–¥–∞'] else '22+ –ª–µ—Ç'))
    rating_cols = {
        'rating_app': '–£–¥–æ–±–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', 'rating_cashback': '–í—ã–≥–æ–¥–Ω—ã–π –∫—ç—à–±—ç–∫', 'rating_service_fee': '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
        'rating_reliability': '–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ –∏–∑–≤–µ—Å—Ç–Ω–æ—Å—Ç—å', 'rating_products': '–í—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã', 'rating_brand': '–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∏ –±—Ä–µ–Ω–¥',
        'rating_office': '–£–¥–æ–±–Ω—ã–µ –æ—Ñ–∏—Å—ã'
    }
    fives_by_segment_percent = {}
    segments = ['–î–æ 18 –ª–µ—Ç', '19-22 –≥–æ–¥–∞', '22+ –ª–µ—Ç']
    for segment in segments:
        segment_df = df[df['age_segment'] == segment]
        if not segment_df.empty:
            fives_percent = (segment_df[rating_cols.keys()] == 5).sum() / len(segment_df) * 100
            fives_percent.index = fives_percent.index.map(rating_cols)
            fives_by_segment_percent[segment] = fives_percent
    fives_df_percent = pd.DataFrame(fives_by_segment_percent).sort_values(by='19-22 –≥–æ–¥–∞', ascending=False)
    fig, ax = plt.subplots(figsize=(16, 9))
    fives_df_percent.plot(kind='bar', ax=ax, width=0.8, colormap='coolwarm')
    ax.set_title('–ö–∞–∫–æ–π % –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–∞–∂–¥–æ–π –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø–µ —Å—á–∏—Ç–∞–µ—Ç –∫—Ä–∏—Ç–µ—Ä–∏–π –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã–º (–æ—Ü–µ–Ω–∫–∞ 5)?', fontsize=18)
    ax.set_ylabel('–î–æ–ª—è —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ, %'); ax.set_xlabel('–ö—Ä–∏—Ç–µ—Ä–∏–π –æ—Ü–µ–Ω–∫–∏ –±–∞–Ω–∫–∞'); ax.tick_params(axis='x', rotation=45, ha='right')
    ax.legend(title='–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —Å–µ–≥–º–µ–Ω—Ç')
    for p in ax.patches:
        ax.annotate(f'{p.get_height():.0f}%', (p.get_x() + p.get_width() / 2., p.get_height()), ha='center', va='center', xytext=(0, 9), textcoords='offset points', fontsize=9)
    ax.set_ylim(0, 110)
    st.pyplot(fig)
    st.info("""
    **–í—ã–≤–æ–¥—ã:**
    - **–§—É–Ω–¥–∞–º–µ–Ω—Ç –¥–ª—è –≤—Å–µ—Ö:** **–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å** –∏ **–±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ** ‚Äî –±–∞–∑–æ–≤—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤.
    - **–°–µ–≥–º–µ–Ω—Ç "–î–æ 18 –ª–µ—Ç":** –î–ª—è –Ω–∏—Ö —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ ‚Äî **–∏–¥–µ–∞–ª—å–Ω–æ–µ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (88% —Å—á–∏—Ç–∞—é—Ç –µ–≥–æ —Å–≤–µ—Ä—Ö–≤–∞–∂–Ω—ã–º)**. –ü—Ä–æ–¥—É–∫—Ç –¥–ª—è –Ω–∏—Ö ‚Äî —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
    - **–°–µ–≥–º–µ–Ω—Ç "19-22 –≥–æ–¥–∞":** –°–∞–º–∞—è —Ç—Ä–µ–±–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è. –ò–º –Ω—É–∂–µ–Ω **–±–∞–ª–∞–Ω—Å –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏, –∫—ç—à–±—ç–∫–∞ –∏ –≤—ã–≥–æ–¥–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤**.
    """)

elif page == '–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏':
    st.header("üìù –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞")
    st.success("### 1. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ –±–∏—Ç–≤—ã: –¢-–ë–∞–Ω–∫")
    st.markdown("""
    –û—Å–Ω–æ–≤–Ω–∞—è –±–æ—Ä—å–±–∞ –∑–∞ –º–æ–ª–æ–¥—É—é, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –∏–¥–µ—Ç –Ω–µ —Å–æ –°–±–µ—Ä–æ–º, –∞ —Å **–¢-–ë–∞–Ω–∫–æ–º**. –û–±–∞ –±–∞–Ω–∫–∞ –≤—ã–±–∏—Ä–∞—é—Ç –∑–∞ **"–ö—ç—à–±—ç–∫ –∏ –±–æ–Ω—É—Å—ã"**.

    **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** –£—á–∏—Ç—ã–≤–∞—è, —á—Ç–æ —É—è–∑–≤–∏–º–æ–µ –º–µ—Å—Ç–æ –¢-–ë–∞–Ω–∫–∞ ‚Äî **"–ü–ª–æ—Ö–∞—è —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"**, –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫—É —Å—Ç–æ–∏—Ç –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é –≤–æ–∫—Ä—É–≥ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –∏ —á–µ–ª–æ–≤–µ—á–Ω–æ—Å—Ç–∏: **"–õ—É—á—à–∏–π –∫—ç—à–±—ç–∫ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —Ä–µ–∞–ª—å–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç"**.
    """)

    st.success("### 2. –†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å '–∞—Ç–∞–∫—É—é—â–∏–µ' –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏")
    st.markdown("""
    –ö–ª–∏–µ–Ω—Ç—ã –°–±–µ—Ä–∞ –∏ –í–¢–ë —Å—Ç—Ä–∞–¥–∞—é—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º, –∫–æ—Ç–æ—Ä—ã–µ –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.

    - **–ê—Ç–∞–∫–∞ –Ω–∞ –°–±–µ—Ä:** –°–¥–µ–ª–∞—Ç—å –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç–µ –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –Ω–∞–≤—è–∑—á–∏–≤–æ—Å—Ç–∏. –ö—Ä–µ–∞—Ç–∏–≤: **"–ë–∞–Ω–∫–∏–Ω–≥ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫ –∏ —Ä–µ–∫–ª–∞–º—ã. –¢–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –≤–∞–º"**.
    - **–ê—Ç–∞–∫–∞ –Ω–∞ –í–¢–ë:** –°–¥–µ–ª–∞—Ç—å –∞–∫—Ü–µ–Ω—Ç –Ω–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ö—Ä–µ–∞—Ç–∏–≤: **"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ë–µ–∑ –≥–ª—é–∫–æ–≤ –∏ –∑–∞–≤–∏—Å–∞–Ω–∏–π"**.
    """)

    st.success("### 3. –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫—ç—à–±—ç–∫ –∫–∞–∫ –∫–ª—é—á–µ–≤–æ–π –ø—Ä–æ–¥—É–∫—Ç, –∞ –Ω–µ –∞–∫—Ü–∏—é")
    st.markdown("""
    **83%** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø—Ä–∏—à–µ–¥—à–∏—Ö –∑–∞ –±–æ–Ω—É—Å–∞–º–∏, –æ—Å—Ç–∞—é—Ç—Å—è —Å –∫–∞—Ä—Ç–æ–π. –≠—Ç–æ –¥–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –¥–ª—è –º–æ–ª–æ–¥–µ–∂–∏ –∫—ç—à–±—ç–∫ ‚Äî –æ–¥–Ω–∞ –∏–∑ –≤–∞–∂–Ω–µ–π—à–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π.

    **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** –ü—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏, –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∫–∞—Å—Ç–æ–º–∏–∑–∏—Ä—É–µ–º—ã–π –∫—ç—à–±—ç–∫ –∏ –∞–∫—Ç–∏–≤–Ω–æ –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å –µ–≥–æ –∫–∞–∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ, –∞ –Ω–µ –≤—Ä–µ–º–µ–Ω–Ω—É—é –∞–∫—Ü–∏—é.
    """)

    st.success("### 4. –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —ç—Ç–∞–ø–æ–≤ –≤–∑—Ä–æ—Å–ª–µ–Ω–∏—è")
    st.markdown("""
    - **–î–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏ "–¥–æ 18"**: –§–æ–∫—É—Å –Ω–∞ **–∏–¥–µ–∞–ª—å–Ω–æ–º –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏**. –≠—Ç–æ –∏—Ö –æ—Å–Ω–æ–≤–Ω–æ–π –∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç. –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç —Å–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é, —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –Ω–∏—Ö.
    - **–î–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏ "19-22"**: –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å **—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã**, –≥–¥–µ –µ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∏ –≤—ã–≥–æ–¥–Ω—ã–π –∫—ç—à–±—ç–∫, –∏ –ø–æ–Ω—è—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –ø–æ –ø–µ—Ä–≤—ã–º –∫—Ä–µ–¥–∏—Ç–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–∞–º.
    """)